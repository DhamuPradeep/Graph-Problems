class Solution {
public:

    int ladderLength(string begin, string end, vector<string>& wordList) {
        unordered_map<string,bool>mp;
        for(string s:wordList) mp[s] = false;
        queue<pair<string,int>>q;
        q.push({begin,1});
        while(!q.empty()){
            begin = q.front().first;
            int count = q.front().second;
            q.pop(); 
            if(begin == end)
                return count;
            for(int i = 0;i<begin.size();i++){
                for(char c = 'a';c<='z';c++){
                    int x = begin[i];
                    begin[i] = c;
                    if(mp.find(begin) != mp.end() && !mp[begin]){
                        q.push({begin,1+count});
                        mp[begin] = true;
                    }
                    begin[i] = x;
                }
            }
        }
        return 0;
    }
};
